
=head1 Founding an empire.

When founding an empire the order of operations is first to C<fetch_captcha>. Then C<create> the empire. Then optionally create a new L<Species> (default is human). Then finally call the C<found> method to set up the empire on it's new home planet.


=head1 Empire Methods

The following methods are available from C</empire>.




=head2 is_name_available ( name ) 

Returns a 1 if the name is available, or a throws an exception if it is not.

Throws 1000.

=head3 name

The name of the empire to search for.



=head2 logout ( session_id )

Ends a session. Returns 1.

Throws 1006.

=head3 session_id

A session id.



=head2 login ( name, password, api_key )

Returns a hash like the following after confirming the password matches the empire.

B<NOTE:> Once established, this session will stick around for up to 2 hours of inactivity. Therefore, you need not login again if you still have a valid session.

 {
    "session_id" : "id-goes-here",
    "status" : { ... }
 }

Throws 1004 and 1005.

=head3 name

The name of the empire.

=head3 password

The password to authenticate to the empire.

=head3 api_key

Your client's unique API key, identifiying it from all other clients. See L<ApiKeys> for details.


=head2 fetch_captcha ( )

Retrieves a captcha that is required in order to call the C<create> method. Display the resulting captcha in your creation form and then call C<create> with the user's response.

 {
    "guid" : "id-goes-here",
    "url" : "'https://extras.lacunaexpanse.com.s3.amazonaws.com/captcha/id/id-goes-here.png" 
 }


=head2 create ( params ) 

Creates a new empire and then returns an empire_id.
 
This is not the end of the story though. Now you must either create a L<Species> for this empire and then C<found> it, or just skip the species part and C<found> the empire.

Throws 1000, 1001, 1002, and 1014.

B<NOTE:> If either C<captcha_guid> or C<captcha_solution> don't match what the server is expecting it will throw a 1014 error, and the data portion of the error message will contain new captcha information. You must use this. A captcha cannot be used more than once.

=head3 params

A hash of parameters.

=head4 name

The name of the empire to create. Required.

=head4 password

The password to log in to the empire. Must be between 6 and 30 characters. Required unless you have a valid C<facebook_uid> and C<facebook_token>. Still recommended even if you are authenticating using Facebook.

=head4 password1

Retyping the password again. This must match C<password> to succeed.

=head4 captcha_guid

This must match the C<guid> field returned by the C<fetch_captcha> method. Required.

=head4 captcha_solution

This is the text typed in by the user as the solution of the captcha. Required.

=head4 email

The user's email address. It is not required, but is used for system vital functions like password recovery.

=head4 facebook_uid

A Facebook user id passed in through Lacuna's Facebook integration system. Optional, but required with the use of C<facebook_token>.

=head4 facebook_token

A Facebook access token passed in through Lacuna's Facebook integration system. Optional, but required with the use of C<facebook_uid>.




=head2 found ( empire_id, api_key, [ invite_code ] )

Set up an empire on it's new home world. Once this method is called, the species can no longer be modified. Returns:

 {
    "session_id" : "id-goes-here",
    "status" : { ... }
 }

=head3 empire_id

The empire to found.

=head3 api_key

Your client's unique API key, identifiying it from all other clients. See L<ApiKeys> for details.

=head3 invite_code

A 36 character code that was sent to the user by a friend. It is usable only once, and will ensure that their friend gets a home planet that is in relatively close proximity to their home planet.



=head2 invite_friend ( session_id, email )

Send an invitation code to a friend so that they can start in the same zone as your empire.

 {
    "status" : { ... }
 }

=head3 session_id

A session id.

=head3 email

The email address of your friend.




=head2 get_status ( session_id )

Returns information about the current state of the empire.

B<NOTE:> You should probably B<never> call this method directly, as it is a wasted call since the data it returns comes back in the status block of every relevant request. See L<Intro/"Status"> for details.


 {
    "server" : { ... },
    "empire" : {
        "id" : "xxxx",
        "is_isolationist" : 1, # hasn't sent out probes or colony ships
        "name" : "The Syndicate",
        "status_message" : "A spy's work is never done.",
        "home_planet_id" : "id-goes-here",
        "has_new_messages" : 4,
        "newest_message" : {
            "id" : "id-goes-here",
            "date_received" : "01 31 2010 13:09:05 +0600",
            "subject" : "Boom!"
        },
        "essentia" : 0,
        "planets" : {
            "id-goes-here" : "Earth",
            "id-goes-here" : "Mars
        }
    }
 }

Throws 1002.

=head3 session_id

A session id.




=head2 view_profile ( session_id )

Provides a list of the editable properties of the current empire's profile. See also the C<edit_profile> and C<view_public_profile> methods.

 {
    "profile" : {
       "description" : "description goes here",
       "status_message" : "status message goes here",
       "medals" : {
           "id-goes-here" : {
               "name" : "Built Level 1 Building",
               "image" : "building1",
               "date" : "01 31 2010 13:09:05 +0600",
               "public" : 1,
               "times_earned" : 4
           },
           ...
       },
       "city" : "Madison",
       "country" : "USA",
       "skype" : "joeuser47",
       "player_name" : "Joe User",
       "email" : "joe@example.com",
       "sitter_password" : "abcdefgh"                   # never give out your real password, use the sitter password
    },
    "status" : { ... }
 }

=head3 session_id

A session id.




=head2 edit_profile ( session_id, profile )

Edits properties of an empire. Returns the C<view_profile> method. See also the C<view_profile> and C<view_public_profile> methods.

Throws 1005, 1009.

=head3 session_id

A session id.

=head3 profile

A hash reference of properties to be edited. You may set one or all of the profile properties in this hash reference. Only those set will be updated.

=head4 description

A description of the empire. Limited to 1024 characters and cannot contain < or >.

=head4 email

An email address that can be used for system functions like password recovery. Must either resemble an email address or be empty.

=head4 sitter_password

A password that can be safely given to account sitters and alliance members. Must be between 6 and 30 characters.

=head4 status_message

A message to indicate what you're doing, how you're feeling, or other status indicator. Limited to 100 characters, cannot be blank, and cannot contain @, &, <, >, or ;.

=head4 city

An optional text string of the city in which the player resides. Limited to 100 characters and cannot contain @, &, <, >, or ;

=head4 country

An optional text string of the country in which the player resides. Limited to 100 characters and cannot contain @, &, <, >, or ;

=head4 skype

An optional text string of the username this player uses on skype. Limited to 100 characters and cannot contain @, &, <, >, or ;

=head4 player_name

An optional text string of the real name or online identity of this player. Limited to 100 characters and cannot contain @, &, <, >, or ;

=head4 public_medals

An array reference of medal ids that the user wishes to display in the public profile.



=head2 view_public_profile (session_id, empire_id)

Provides a list of the data that's publicly known about this empire.

 {
    "profile" : {
        "id" : "empire-id-goes-here",
        "name" : "Lacuna Expanse Corp",
        "planet_count" : 1,
        "status_message" : "Looking for Essentia."
        "description" : "We are the original inhabitants of the Lacuna Expanse.",
        "city" : "Madison",
        "country" : "USA",
        "skype" : "joeuser47",
        "player_name" : "Joe User",
        "medals" : {
            "id-goes-here" : {
                "name" : "Built Level 1 Building",
                "image" : "building1",
                "date" : "01 31 2010 13:09:05 +0600",
               "times_earned" : 4
            },
            ...
        },
        "last_login" : "01 31 2010 13:09:05 +0600",
        "date_founded" : "01 31 2010 13:09:05 +0600",
        "species" : "Lacunan",
        "known_colonies" : [
            {
                "id" : "id-goes-here",
                "x" : "1",
                "y" : "-543",
                "name" : "Earth",
                "image" : "p12-3",
            },
            ...
        ]
    },
    "status" : { ... }
 }
 
Throws 1002.

=head3 session_id

A session id.

=head3 empire_id

The id of the empire for which you'd like to retrieve the public profile.



=head2 send_password_reset_message ( params )

Starts a password recovery process by sending an email with a recovery key.

=head3 params

A hash of options to recover a password. Choose one.

=head4 empire_id

The unique id of the empire to recover.

=head4 empire_name

The full name of the empire.

=head4 email

The email address associated with an empire.




=head2 reset_password ( reset_key, password1, password2, api_key ) 

Change the empire password that has been forgotten.

=head3 reset_key

A key that was emailed to the user via the C<send_password_reset_message> method.

=head3 password1

The password to log in to the empire. Required. Must be between 6 and 30 characters.

=head3 password2

Retyping the password again. This must match C<password1> to succeed.

=head3 api_key

Your client's unique API key, identifiying it from all other clients. See L<ApiKeys> for details.







=head2 change_password ( session_id, current_password, password1, password2 ) 

Change the empire password.

=head3 session_id

A session id.

=head3 current_password

The current password as it is right now before the change. If you don't know the current password you can't change it.

=head3 password1

The password to log in to the empire. Required. Must be between 6 and 30 characters.

=head3 password2

Retyping the password again. This must match C<password1> to succeed.




=head2 find ( session_id, name )

Find an empire by name. Returns a hash reference containing empire ids and empire names. So if you searched for "Lacuna" you might get back a result set that looks like this:

 {
    "empires" : [
        {
            "id" : "id-goes-here",
            "name" : "Lacuna Expanse Corp"
        },
        {    
            "id" : "id-goes-here2",
            "name" : "Lacuna Pirates"
        }
    ],
    "status" : { ... }
 }
 
=head3 session_id

A session id.

=head3 name

The name your searching for. It's case insensitive, and partial names work fine. Must be at least 3 characters.



=head2 set_status_message ( session_id, message )

Sets the empire status message. Similar to what you might put on your Facebook wall, or in a tweet, but about your empire.

=head3 session_id

A session id.

=head3 message

A message to indicate what you're doing, how you're feeling, or other status indicator. Limited to 100 characters, cannot be blank, and cannot contain @, &, <, >, or ;.



=head2 view_boosts ( session_id )

Shows the dates at which boosts have expired or will expire. Boosts are subsidies applied to various resources using essentia.

 {
    "status" : { ... },
    "boosts" : {
        "food" : "01 31 2010 13:09:05 +0600",
        "ore" : "01 31 2010 13:09:05 +0600",
        "energy" : "01 31 2010 13:09:05 +0600",
        "water" : "01 31 2010 13:09:05 +0600",
        "happiness" : "01 31 2010 13:09:05 +0600",
        "storage" : "01 31 2010 13:09:05 +0600"
    }
 }

=head3 session_id

A session id.



=head2 boost_storage ( session_id )

Spends 5 essentia, and boosts storage (all 5 types) on all planets for 7 days. If a boost is already underway, calling again will add 7 more days.

 {
    "status" : { ... },
    "storage_boost" : "01 31 2010 13:09:05 +0600"
 }

Throws 1011.

=head3 session_id

A session id.



=head2 boost_food ( session_id )

Spends 5 essentia, and boosts food production on all planets for 7 days. If a boost is already underway, calling again will add 7 more days.

 {
    "status" : { ... },
    "food_boost" : "01 31 2010 13:09:05 +0600"
 }

Throws 1011.

=head3 session_id

A session id.


=head2 boost_water ( session_id )

Spends 5 essentia, and boosts water production on all planets for 7 days. If a boost is already underway, calling again will add 7 more days.

 {
    "status" : { ... },
    "water_boost" : "01 31 2010 13:09:05 +0600"
 }

Throws 1011.

=head3 session_id

A session id.


=head2 boost_energy ( session_id )

Spends 5 essentia, and boosts energy production on all planets for 7 days. If a boost is already underway, calling again will add 7 more days.

 {
    "status" : { ... },
    "energy_boost" : "01 31 2010 13:09:05 +0600"
 }

Throws 1011.

=head3 session_id

A session id.


=head2 boost_ore ( session_id )

Spends 5 essentia, and boosts ore production on all planets for 7 days. If a boost is already underway, calling again will add 7 more days.

 {
    "status" : { ... },
    "ore_boost" : "01 31 2010 13:09:05 +0600"
 }

Throws 1011.

=head3 session_id

A session id.


=head2 boost_happiness ( session_id )

Spends 5 essentia, and boosts happiness production on all planets for 7 days. If a boost is already underway, calling again will add 7 more days.

 {
    "status" : { ... },
    "happiness_boost" : "01 31 2010 13:09:05 +0600"
 }

Throws 1011.

=head3 session_id

A session id.



=head2 enable_self_destruct ( session_id )

Enables a destruction countdown of 24 hours. Sometime after the timer runs out, the empire will vaporize.

{
    "status" : { ... }
}

=head3 session_id

A session id.



=head2 disable_self_destruct ( session_id )

Disables the self distruction countdown. 

{
    "status" : { ... }
}

=head3 session_id

A session id.




=cut

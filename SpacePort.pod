=head1 Space Port Methods

Space Port is accessible via the URL C</spaceport>.

The Space Port is where all the ships you build will be docked once they have been built from the L<Shipyard>. You can dock twice as many ships as the level of the Space Port.

The list of methods below represents changes and additions to the methods that all L<Buildings> share.

=head2 view ( session_id, building_id )

This method is extended to include a list of docked ships.

 {
    "building" : { ... },
    "status" : { ... },
    "max_ships" : 8,
    "docks_available" : 4,
    "docked_ships" : {
        "probe" : 3,
        "cargo_ship" : 0,
        "spy_pod" : 1,
        "colony_ship" : 0,
        "terraforming_platform_ship": 0,
        "gas_giant_settlement_platform_ship" : 0,
        "mining_platform_ship" : 0,
        "smuggler_ship" : 1,
        "space_station" : 0,
    }
 }
 

=head2 view_all_ships ( session_id, building_id )

Shows you the ships that are working in the mining fleet, and available to work in the mining fleet.

 {
    "ships" : [
        {
            "id" : "id-goes-here",
            "name" : "CS3",
            "type_human" : "Cargo Ship",
            "type" : "cargo_ship",
            "task" : "Travelling",
            "speed" : "400",
            "stealth" : "0",
            "hold_size" : "1200",
            "date_started" : "01 31 2010 13:09:05 +0600",
            "date_available" : "02 01 2010 10:08:33 +0600",
            "date_arrives" : "02 01 2010 10:08:33 +0600",
            "from" : {
               "id" : "id-goes-here",
               "type" : "body",
               "name" : "Earth"
            },
            "to" : {
               "id" : "id-goes-here",
               "type" : "body",
               "name" : "Mars"
            }
        },
        ...
    ],
    "number_of_ships" : 13,
    "status" : { ... }
 }

=head3 session_id

A session id.

=head3 building_id

The unique id of the space port.


=head2 get_ships_for ( session_id, from_body_id, target )

Provides a list of incoming ships and ships that are available to send to a specific target. Use with C<send_ship>.

 {
    "incoming" : [
        {
            "id" : "id-goes-here",
            "name" : "P13",
            "type_human" : "Probe",
            "type" : "probe",
            "task" : "Travelling",
            "speed" : "1200",
            "stealth" : "0",
            "hold_size" : "0",
            "date_started" : "01 31 2010 13:09:05 +0600",
            "date_available" : "02 01 2010 10:08:33 +0600",
            "date_arrives" : "02 01 2010 10:08:33 +0600",
            "from" : {
               "id" : "id-goes-here",
               "type" : "body",
               "name" : "Earth"
            },
            "to" : {
               "id" : "id-goes-here",
               "type" : "star",
               "name" : "Sol"
            }
        },
        ...
    ],
    "available" : [
        {
            "id" : "id-goes-here",
            "name" : "D13",
            "type_human" : "Detonator",
            "type" : "detonator",
            "task" : "Docked",
            "speed" : "700",
            "stealth" : "0",
            "hold_size" : "0",
            "date_started" : "01 31 2010 13:09:05 +0600",
            "date_available" : "01 31 2010 13:09:05 +0600"
        },
        ...
    ],
    "mining_platforms" : [
        {
            empire_id   =>  "id-goes-here",
            empire_name => "The Peeps From Across The Street"
        },
        ...
    ],
    "status" : { ... }
 }

The C<mining_platforms> block will be returned only if the target is an asteroid that has platforms on it.

=head3 session_id

A session id.

=head3 from_body_id

The unique id of the planet that should send the ship.

=head3 target

A hash reference that can contain one of five items to identify a star or body.

 { "body_name" : "Earth" }
 
 { "body_id" : "id-goes-here" }
 
 { "star_name" : "Sol" }
 
 { "star_id" : "id-goes-here" }
 
 { "x" : 4, "y" : -3 }

=head4 body_name

A string with the body's name. Case insensitive, but will throw an exception for misspelling.

=head4 body_id

The unique id of the body.

=head4 star_name

A string with the star's name. Case insensitive, but will throw an exception for misspelling.

=head4 star_id

The unique id of the star.

=head4 x | y

A set of x,y coordinates to locate the star or body.



=head2 send_ship ( session_id, ship_id, target )

Sends a ship to a specified body or star. Use with C<get_ships_for>.

 {
    "status" : { ... },
    "ship" : {
        "id" : "id-goes-here",
        "name" : "P13",
        "type_human" : "Probe",
        "type" : "probe",
        "task" : "Travelling",
        "speed" : "1200",
        "stealth" : "0",
        "hold_size" : "0",
        "date_started" : "01 31 2010 13:09:05 +0600",
        "date_available" : "02 01 2010 10:08:33 +0600",
        "date_arrives" : "02 01 2010 10:08:33 +0600",
        "from" : {
           "id" : "id-goes-here",
           "type" : "body",
           "name" : "Earth"
        },
        "to" : {
           "id" : "id-goes-here",
           "type" : "star",
           "name" : "Sol"
        }
    }  
 }

=head3 session_id

A session id.

=head3 ship_id

The unique id of a ship to send.

=head3 target

A hash reference that can contain one of five items to identify a star or body.

 { "body_name" : "Earth" }
 
 { "body_id" : "id-goes-here" }
 
 { "star_name" : "Sol" }
 
 { "star_id" : "id-goes-here" }
 
 { "x" : 4, "y" : -3 }

=head4 body_name

A string with the body's name. Case insensitive, but will throw an exception for misspelling.

=head4 body_id

The unique id of the body.

=head4 star_name

A string with the star's name. Case insensitive, but will throw an exception for misspelling.

=head4 star_id

The unique id of the star.

=head4 x | y

A set of x,y coordinates to locate the star or body.




=head2 name_ship ( session_id, building_id, ship_id, name )

Set the name of a ship.

=head3 session_id

A session id.

=head3 building_id

The unique id for the space port.

=head3 ship_id

The unique id of the ship you want to name.

=head3 name

The name you want to give the ship. 1 to 30 characters. No profanity. No funky characters.



=head2 scuttle_ship ( session_id, building_id, ship_id )

Destroy a ship that you no longer need. It must be docked to scuttle it.

=head3 session_id

A session id.

=head3 building_id

The unique id for the space port.

=head3 ship_id

The unique id of the ship you want to destroy.


 
=head2 view_ships_travelling ( session_id, building_id, [ page_number ])

Returns a list of the ships that are travelling to or from this planet.

B<NOTE:> All inbound/outbound ships are shown regardless of which space port they will eventually land at.

 {
    "status" : { ... },
    "number_of_ships_travelling" : 30,
    "ships_travelling" : [
       {
           "id" : "id-goes-here",
           "type" : "probe",
           "date_arrives" : "01 31 2010 13:09:05 +0600",
           "from" : {
               "id" : "id-goes-here",
               "type" : "body",
               "name" : "Earth",
           },
           "to" : {
               "id" : "id-goes-here",
               "type" : "star",
               "name" : "Sol",
           }
       },
       ...
    ]
 }


=head3 session_id

A session id.

=head3 building_id

The unique id of the space port.

=head3 page_number

Defaults to 1. An integer representing which page of ships travelling to view. Each page shows 25 ships.



=head2 send_spies ( session_id, from_body_id, to_body, ship_id, spy_ids )

Sends one or more of spies to a planet using a selected ship.

 {
     "ship" : {
         "date_arrives" : "01 31 2010 13:09:05 +0600",
         "spies_sent" : ["id-goes-here","id-goes-here","id-goes-here"],     # should be identical to "spy_ids"
         "spies_not_sent" : ["id-goes-here","id-goes-here","id-goes-here"]  # should only contain something if you're cheating, or a spy dies/turns between RPC calls
     },
     "status" : { ... }
 }

=head3 session_id

A session id.

=head3 from_body_id

The unique id of the planet that should send the ship.

=head3 to_body

A hash reference that can contain one of three items to identify a planet.

 { "body_name" : "Earth" }
 
 { "body_id" : "id-goes-here" }
 
 { "x" : 4, "y" : -3 }

=head4 body_name

A string with the body's name. Case insensitive, but will throw an exception for misspelling.

=head4 body_id

The unique id of the body.

=head4 x | y

A set of x,y coords to locate the body.

=head3 ship_id

The unique id of the ship to send. See the C<get_spy_ships> method.

=head3 spy_ids

An array reference of spy ids to send. See the C<get_my_available_spies> method.





=head2 fetch_spies ( session_id, from_body_id, to_body, ship_id, spy_ids )

Sends a specified ship to fetch specified spies, and bring them back to C<from_body_id>.

B<NOTE:> If the spies are not Idle when the ship arrives, they will not be picked up.

 {
     "ship" : {
         "date_arrives" : "01 31 2010 13:09:05 +0600",
     },
     "status" : { ... }
 }

=head3 session_id

A session id.

=head3 from_body_id

The unique id of the planet that should send the ship.

=head3 to_body

A hash reference that can contain one of three items to identify a planet.

 { "body_name" : "Earth" }
 
 { "body_id" : "id-goes-here" }
 
 { "x" : 4, "y" : -3 }

=head4 body_name

A string with the body's name. Case insensitive, but will throw an exception for misspelling.

=head4 body_id

The unique id of the body.

=head4 x | y

A set of x,y coords to locate the body.

=head3 ship_id

The unique id of the ship to send. See the C<get_spy_ships> method.

=head3 spy_ids

An array reference of spy ids to send. See the C<get_my_available_spies> method.




=head2 get_available_spy_ships ( session_id, from_body_id )

Returns a list of ships capable of sending spies.

 {
     "status" : { ... },
     "ships" : [
         {
            "id" : "id-goes-here",
            "name" : "CS4",
            "hold_size" : 1100,
            "speed" : 400,
            "type" : "cargo_ship"
         },
         ...
     ]
 }

=head3 session_id

A session id.

=head3 from_body_id

The unique id of the planet that should send the ship.




=head2 get_available_spy_ships_for_fetch ( session_id, from_body_id )

Returns a list of ships capable of retrieving spies.

 {
     "status" : { ... },
     "ships" : [
         {
            "id" : "id-goes-here",
            "name" : "CS4",
            "hold_size" : 1100,
            "speed" : 400,
            "type" : "cargo_ship"
         },
         ...
     ]
 }

=head3 session_id

A session id.

=head3 from_body_id

The unique id of the planet that should send the ship.



=head2 get_my_available_spies ( session_id, on_body_id )

Returns a list of spies that are controlled by this empire and are on the specified body and are available for transport (assignment is Idle).

 {
   "spies" : [
      {
         "id" : "id-goes-here",
         "level" : 12,
         "name" : "Jack Bauer",
         "from" : {
            "id" : "id-goes-here",
            "name" : "Earth"
         },
      },
      ...
   ],
   "status" : { ... }
 }

=head3 session_id

A session id.

=head3 on_body_id

The unique id of the planet that the spies are on.



=cut
